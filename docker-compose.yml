version: "3.8"

services:
  db_nvd_mirror:
    image: msusel/nvd-mirror:latest
    container_name: db_nvd_mirror
    hostname: db_nvd_mirror
    networks:
      nvd_db_connection:
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "nvd_mirror"]
      interval: 30s
      timeout: 10s
      retries: 10

  # This service is used to check if the NVD database is hydrated
  nvd_hydration_check:
    image: postgres:16
    depends_on:
      db_nvd_mirror:
        condition: service_healthy
    entrypoint:
      - /bin/sh
      - -c
      - |
        echo "Waiting for NVD hydration...";
        until PGPASSWORD=postgres psql -h db_nvd_mirror -U postgres -d nvd_mirror -tAc "SELECT COUNT(*) FROM nvd.cve;" | grep -qE "^[1-9][0-9]*$"; do
          echo "Still hydrating... sleeping 15s";
          sleep 15;
        done
        echo "Hydration complete!"
    networks:
      - nvd_db_connection

  app_pique-sbom-supplychain-sec:
    image: msusel/pique-sbom-supply-chain-sec:2.0
    networks:
      nvd_db_connection:
    depends_on:
      nvd_hydration_check:
        condition: service_completed_successfully
    environment:
      - PG_HOSTNAME=db_nvd_mirror
      - PG_DRIVER=jdbc:postgresql
      - PG_PORT=5432
      - PG_DBNAME=nvd_mirror
      - PG_USERNAME=postgres
      - PG_PASS=postgres
    env_file:
      - .env
    volumes:
      - "./input:/input"
      - "./out:/out"
    command: ["--gen_tool", "none", "--derived_model", "npm-trimmed"]

networks:
  nvd_db_connection:
    driver: bridge

volumes:
  input:
  out:
